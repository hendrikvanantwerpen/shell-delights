#!/bin/bash

RUNDIR=$HOME/.local/run
LOGDIR=$HOME/.local/log
mkdir -p $RUNDIR $LOGDIR

usage() {
    echo "Usage:"
    echo -e "\t$0 list <clean>"
    echo -e "\t$0 logs <clean>"
    echo -e "\t$0 NAME start PROGRAM <ARGS>"
    echo -e "\t$0 NAME status"
    echo -e "\t$0 NAME log"
    echo -e "\t$0 NAME stop"
}

check_running() {
    NAME=$1
    PIDFILE=$RUNDIR/$NAME.pid
    CLEANUP=$2
    if [ -f "$PIDFILE" ]; then
        THEPID=`cat "$PIDFILE"`
        ps -p $THEPID >&/dev/null && { 
            echo "$NAME ($THEPID) running."
        } || {
            echo "$NAME ($THEPID) not running (crashed?)."
            if [ "x$CLEANUP" = "xclean" ]; then
                echo "Cleaning up stale process $NAME."
                /bin/rm -f "$PIDFILE"
            fi
            false
        }
    else
        echo "PID file for $NAME not found."
        false
    fi
}

NAME=$1
if [ -z "$NAME" ]; then
    echo "Error: No name specified."
    usage
    exit 1
fi
shift

LOGFILE=$LOGDIR/${NAME}.log
PIDFILE=$RUNDIR/${NAME}.pid

if [ "x$NAME" = "xlist" ]; then
    for PNAME in `ls $RUNDIR/*.pid 2>/dev/null | xargs -I{} basename {} .pid`; do
        check_running "$PNAME" $1
    done
    exit 0
fi

if [ "x$NAME" = "xlogs" ]; then
    for LNAME in `ls $LOGDIR/*.log 2>/dev/null | xargs -I{} basename {} .log`; do
        if check_running "$LNAME" $1 >&/dev/null; then
            echo "$LNAME active log found"
        else
            if [ "x$1" = "xclean" ]; then
                echo "Cleaning up stale log $NAME"
                /bin/rm -f "$LOGDIR/${LNAME}.log"
            else
                echo "$LNAME finished log found"
            fi
        fi
    done
    exit 0
fi

CMD=$1
if [ -z "$CMD" ]; then
    echo "Error: No command specified."
    usage
    exit 1
fi
shift

case "$CMD" in
    start)
        if [ -f "$PIDFILE" ] && check_running "$NAME" clean; then
            echo "Cannot start second instance."
            exit 1
        fi
        nohup $* >&"$LOGFILE" &
        echo $! >"$PIDFILE"
        ;;
    stat*)
        check_running "$NAME" $1
        ;;
    log)
        check_running "$NAME" $1 && {
            echo "*** Showing process output, close with Ctrl-C ***"
            tail -f "$LOGFILE"
        } || { [ -e "$PIDFILE" ] && {
            tail "$LOGFILE"
            echo "*** Process terminated ***"
        } }
        ;;
    stop)
        if check_running "$NAME" clean; then
            THEPID=`cat "$PIDFILE"`
            kill $THEPID >&/dev/null && {
                echo "Stopping ${NAME} ($THEPID)..."
                while ps -p "$THEPID" >&/dev/null; do sleep 1; done && {
                    /bin/rm -f "$PIDFILE"
                }
                true
            } || {
                echo "$NAME ($THEPID) could not be stopped."
                false
            }
        fi
        ;;
    *)
        echo "Error: Unknown command $CMD"
        usage
        exit 1
        ;;
esac
